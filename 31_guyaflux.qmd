```{r set}
#| include: false
library(tidyverse)
```

# Guyaflux {.unnumbered}

Simulated forest fluxes will be evaluated against a single point - Guyaflux [@bonal2008] - as in @schmitt2024. For the moment, I will only use cleaned and prepared data from FLUXNET 2015 [@pastorellogilberto2020] from 2004 to 2014 for ease, but longer temporal data could be extracted from Guyaflux with a request to Damien Bonal.

```{r fluxnet}
#| eval: false
lambda <- function(tas) 2.501 - (2.361*10^-3)*tas
"data/raw_data/FLX_GF-Guy_FLUXNET2015_SUBSET_HH_2004-2014_2-4.csv" %>% 
  read_csv(na = "-9999") %>% 
  select(TIMESTAMP_START, TIMESTAMP_END,
         TA_F, GPP_NT_VUT_REF, LE_F_MDS) %>% 
  mutate(time = as_datetime(as.character(as.POSIXlt(as.character(TIMESTAMP_START), 
                                                    format = "%Y%m%d%H%M")))) %>% 
  rename(tas = TA_F, gpp = GPP_NT_VUT_REF, le = LE_F_MDS) %>% 
  mutate(et = 10^-6*le*60*30 / lambda(tas)) %>% # W.m-2.half-hour to MJ.s-1 to kg.m-2.half-hour
  mutate(et = ifelse(hour(time) %in% 7:18, et, 0)) %>% 
  mutate(gpp = gpp/100) %>% 
  select(time, gpp, et) %>% 
  write_tsv("data/derived_data/guyaflux.tsv")
```

```{r guyaflux}
#| message: false
#| warning: false
#| fig-cap: "Caption."
daily_var <- read_tsv("data/derived_data/guyaflux.tsv") %>% 
  gather(variable, value, -time) %>% 
  group_by(variable, date = as_date(time)) %>% 
  summarise(value = mean(value))
monthly_var <- daily_var %>% 
  group_by(variable, date = floor_date(date, "month")) %>% 
  summarise(value = mean(value))
ggplot(daily_var, aes(date, value)) +
  geom_line(alpha = 0.5) +
  geom_line(data = monthly_var) +
  theme_bw() +
  facet_wrap(~ variable, scales = "free_y", nrow = 2) +
  theme(axis.title = element_blank())
```

```{r fortnightly}
#| message: false
#| warning: false
#| fig-cap: "Caption."
fortnightly <- function(full) 
  as_date(paste0(year(full), "-", month(full), "-", ifelse(day(full) > 15, 15, 1)))
read_tsv("data/derived_data/guyaflux.tsv") %>% 
  gather(variable, value, -time) %>% 
  group_by(variable, date = as_date(time)) %>% 
  summarise(value = mean(value)) %>% 
  group_by(variable, date = floor_date(date, "15 days")) %>% 
  summarise_all(mean, na.rm = T) %>%
  mutate(week = week(fortnightly(date))) %>%  
  group_by(variable, week) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  ggplot(aes(week, m)) +
  geom_ribbon(aes(ymin = l, ymax = h), col = NA, alpha = 0.2) +
  geom_smooth(se = FALSE) +
  theme_bw() +
  theme(axis.title = element_blank()) +
  scale_fill_discrete("") +
  scale_color_discrete("") +
  facet_wrap(~ variable, scales = "free_y") +
  scale_x_continuous(breaks = week(as_date(paste("2000-", 1:12, "-01"))),
                     labels = c("J", "F", "M", "A", "M", "J", "J", "A",
                                "S", "O", "N", "D"))
```
